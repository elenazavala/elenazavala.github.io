{"version":3,"sources":["./src/app/signin/signin.component.ts","./src/app/signin/signin.component.html","./src/app/authentication.service.ts","./src/app/movie.service.ts","./src/app/movies/movies.component.ts","./src/app/movies/movies.component.html","./src/app/ticket.ts","./src/app/movie.ts","./src/app/movie-list/movie-list.component.html","./src/app/movie-list/movie-list.component.ts","./src/app/ticket/ticket.component.ts","./src/app/ticket/ticket.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/costumer.ts","./src/app/costumer/costumer.component.ts","./src/app/costumer/costumer.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/costumer.service.ts","./src/main.ts","./src/app/ticket.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\nimport {CostumerService} from '../costumer.service';\nimport {Costumer} from '../costumer';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  username = ''\n  password = ''\n  id:number;\n  costumer: Costumer;\n  invalidLogin = false\n\n  constructor(private router: Router,\n    private loginservice: AuthenticationService, private CostumerService: CostumerService, \n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n  }\n\n  checkLogin() {\n    if (this.loginservice.authenticate(this.username, this.password)\n    ) {\n      this.router.navigate([''])\n      this.invalidLogin = false\n    } else\n      this.invalidLogin = true\n  }\n\n  test(){\n    this.costumer = new Costumer();\n    this.CostumerService.getCostumerById(this.id).subscribe(data => {\n      this.costumer = data;\n      console.log(data);\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div>\n      User Name : <input type=\"text\" name=\"username\" [(ngModel)]=\"username\">\n      id : <input type=\"id\" name=\"id\" [(ngModel)]=\"id\">\n      Password : <input type=\"password\" name=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <button (click)=checkLogin() class=\"btn btn-success\">Login</button>\n    <button (click)=test() class=\"btn btn-success\">test</button>\n  </div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor() { }\n\n  authenticate(username, password) {\n    if (username === \"username\" && password === \"password\") {\n      sessionStorage.setItem('username', username)\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('username')\n    console.log(!(user === null))\n    return !(user === null)\n  }\n\n  logOut() {\n    sessionStorage.removeItem('username')\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Movie} from './movie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  //reponse from REST api\n  private baseURL = \"http://localhost:8080/api/v1/movies\";\n  constructor(private httpClient: HttpClient) { }\n\n  getMoviesList(): Observable<Movie[]>{\n    return this.httpClient.get<Movie[]>(this.baseURL);\n  }\n\n  getMovieById(id: number): Observable<Movie>{\n    return this.httpClient.get<Movie>(`${this.baseURL}/${id}`);\n  }\n\n  /*\n\n  updateStudent(id: number, student: Student): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`, student);\n  }\n\n  deleteStudent(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n\n  getStudentbyId(id: number): Observable<Student>{\n    return this.httpClient.get<Student>(`${this.baseURL}/${id}`);\n  }\n  */\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Movie} from '../movie';\nimport {ActivatedRoute} from '@angular/router';\nimport {MovieService} from '../movie.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MoviesComponent implements OnInit {\n\n  id: number;\n  movie: Movie;\n\n  constructor(private route: ActivatedRoute, private movieService: MovieService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    this.movie = new Movie();\n    this.movieService.getMovieById(this.id).subscribe(data => {\n      this.movie = data;\n      console.log(data);\n    });\n  }\n\n  Purchase(){\n    this.router.navigate(['/login']);\n  }\n\n  back(){\n    this.router.navigate(['/movie-list']);\n  }\n\n}\n","<h3> View Movie Details</h3>\n<div>\n    <div>\n        <label> <b> Movie Name: </b></label> {{movie.movie_name}}\n    </div>\n    <div>\n        <label> <b> Show Date: </b></label> {{movie.show_date}}\n    </div>\n    <div>\n        <label> <b> Show Time: </b></label> {{movie.show_time}}\n    </div>\n    <div>\n        <label> <b> Ticket Price ($): </b></label> {{movie.price}}\n    </div>\n    <div id = \"container\">\n        <button (click) = \"Purchase()\" class=\"btn btn-dark\" type=\"submit\" id=\"button1\"> Purchase </button>\n        <button (click) = \"back()\" class=\"btn btn-dark\" type=\"submit\" id=\"button2\"> Go Back </button>\n    </div>\n</div>\n","export class Ticket {\n    id: number;\n    firstName: string;\n    lastName: string;\n    email: string;\n}\n","//This class holds data from API\nexport class Movie {\n    id: number;\n    movie_name: string;\n    show_date: string;\n    show_time: string;\n    price: number;\n}\n","<h2> Movie List </h2>\n<table class = \"table table-striped\">\n    <thead>\n        <tr>\n            <th> Movie ID </th>\n            <th> Movie Name </th>\n            <th> Show Date </th>\n            <th> Show Time </th>\n            <th> Price $ </th>\n            <th> Actions </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor = \"let movie of movies\">\n            <td>{{movie.id}}</td>\n            <td>{{movie.movie_name}}</td>\n            <td>{{movie.show_date}}</td>\n            <td>{{movie.show_time}}</td>\n            <td>{{movie.price}}</td>\n            <td>\n                <button (click) = \"view(movie.id)\" class = \"btn btn-primary\">View</button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport {Movie} from '../movie'\nimport {MovieService} from '../movie.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.css']\n})\nexport class MovieListComponent implements OnInit {\n\n  movies: Movie[];\n  //inject movie service on this component to manage data\n  constructor(private movieService: MovieService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getMovies();\n  }\n\n  //method to populate the movies array with data\n  private getMovies(){\n    this.movieService.getMoviesList().subscribe(data => {\n      this.movies = data;\n      console.log(this.movies);\n    })\n  }\n\n  view(id: number){\n    this.router.navigate(['movies', id]);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {TicketService} from '../ticket.service';\nimport {Router} from '@angular/router';\nimport {Ticket} from '../ticket';\n\n@Component({\n  selector: 'app-costumer',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.css']\n})\nexport class TicketComponent implements OnInit {\n\n  ticket : Ticket = new Ticket();\n  constructor(private TicketService: TicketService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goToDisplay(){\n    this.router.navigate(['/movie-list']);\n  }\n\n  saveTicket(){\n    this.TicketService.createTicket(this.ticket).subscribe(data => {\n      console.log(data);\n      alert(\"Your Purchase has been processed succesfully\");\n      this.goToDisplay();\n    },\n    error => console.log(error));\n  }\n\n  onSubmit(){\n    console.log(this.ticket);\n    this.saveTicket();\n  }\n\n}\n","<div class = \"col-md-6 offset-md-3\"> \n    <h3> Purchase Ticket </h3>\n    <form (ngSubmit) = \"onSubmit()\">\n        <div class = \"form-group\">\n            <label> First Name </label>\n            <input type=\"text\" class = \"form-control\" id = \"first_name\"\n                [(ngModel)] = \"ticket.firstName\" name = \"first_name\">\n        </div>\n        <div class = \"form-group\">\n            <label> Last Name </label>\n            <input type=\"text\" class = \"form-control\" id = \"last_name\"\n                [(ngModel)] = \"ticket.lastName\" name = \"last_name\">\n        </div>\n        <div class = \"form-group\">\n            <label> Email </label>\n            <input type=\"text\" class = \"form-control\" id = \"email\"\n                [(ngModel)] = \"ticket.email\" name = \"email\">\n        </div>\n    \n        <button class=\"btn btn-dark\" type=\"submit\"> Check Out </button>\n    </form>\n    </div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'A&E Theater';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<nav class = \"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <ul class = \"navbar-nav\">\n    <li class = \"nav-item\">\n      <a routerLink = \"movie-list\" routerLinkActive = \"active\" class = \"nav-link\"> Movie List </a>\n      <a routerLink=\"login\" routerLinkActive = \"active\" class=\"nav-link\"> Login </a>\n    </li>\n    \n  </ul>\n</nav>\n\n<h1 class=\"text-center\"> {{title}} </h1>\n<div class = \"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MovieListComponent } from './movie-list/movie-list.component';\nimport { TicketComponent } from './ticket/ticket.component';\nimport { CostumerComponent } from './costumer/costumer.component';\nimport { MoviesComponent } from './movies/movies.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { SigninComponent } from './signin/signin.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MovieListComponent,\n    TicketComponent,\n    CostumerComponent,\n    MoviesComponent,\n    LoginComponent,\n    LogoutComponent,\n    SigninComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Costumer {\n    id: number;\n    first_name: string;\n    last_name: string;\n    email: string;\n    password: string;\n    username: string;\n}","import { Component, OnInit } from '@angular/core';\nimport {CostumerService} from '../costumer.service';\nimport {Router} from '@angular/router';\nimport {Costumer} from '../costumer';\n\n@Component({\n  selector: 'app-costumer',\n  templateUrl: './costumer.component.html',\n  styleUrls: ['./costumer.component.css']\n})\nexport class CostumerComponent implements OnInit {\n\n  costumer: Costumer = new Costumer();\n  constructor(private CostumerService: CostumerService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goToDisplay(){\n    this.router.navigate(['/movie-list']);\n  }\n\n  saveCostumer(){\n    this.CostumerService.createCostumer(this.costumer).subscribe(data => {\n      console.log(data);\n      alert(\"Your Purchase has been processed succesfully\");\n      this.goToDisplay();\n    },\n    error => console.log(error));\n  }\n\n  onSubmit(){\n    console.log(this.costumer);\n    this.saveCostumer();\n  }\n\n}\n","<div class = \"col-md-6 offset-md-3\"> \n    <h3> Purchase Ticket </h3>\n    <form (ngSubmit) = \"onSubmit()\">\n        <div class = \"form-group\">\n            <label> First Name </label>\n            <input type=\"text\" class = \"form-control\" id = \"first_name\"\n                [(ngModel)] = \"costumer.first_name\" name = \"first_name\">\n        </div>\n        <div class = \"form-group\">\n            <label> Last Name </label>\n            <input type=\"text\" class = \"form-control\" id = \"last_name\"\n                [(ngModel)] = \"costumer.last_name\" name = \"last_name\">\n        </div>\n        <div class = \"form-group\">\n            <label> Email </label>\n            <input type=\"text\" class = \"form-control\" id = \"email\"\n                [(ngModel)] = \"costumer.email\" name = \"email\">\n        </div>\n    \n        <button class=\"btn btn-dark\" type=\"submit\"> Check Out </button>\n    </form>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private authentocationService: AuthenticationService,\n    private router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.authentocationService.logOut();\n    this.router.navigate(['login']);\n  }\n\n}\n","<p>logout works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MovieListComponent } from './movie-list/movie-list.component';\nimport { MoviesComponent } from './movies/movies.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { CostumerComponent } from './costumer/costumer.component';\nimport { TicketComponent } from './ticket/ticket.component';\n\n//defining routes to my components \nconst routes: Routes = [\n  {path: \"movie-list\", component: MovieListComponent},\n  {path: \"movies/:id\", component: MoviesComponent},\n  {path: \"costumer\", component: CostumerComponent},\n  { path: 'login', component: LoginComponent },\n  {path: '', redirectTo: 'movies', pathMatch: 'full'},\n  { path: 'logout', component: LogoutComponent },\n  { path: 'signin', component: SigninComponent },\n  { path: 'ticket', component: TicketComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\nimport {Costumer} from '../costumer';\nimport {CostumerService} from '../costumer.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  costumer: Costumer = new Costumer();\n  username = ''\n  password = ''\n  invalidLogin = false\n\n  constructor(private router: Router,\n    private loginservice: AuthenticationService, private CostumerService: CostumerService) { }\n\n  ngOnInit() {\n  }\n\n  goToDisplay(){\n    this.router.navigate(['/ticket']);\n  }\n\n  Login(){\n    this.CostumerService.createCostumer(this.costumer).subscribe(data => {\n      console.log(data);\n      alert(\"you are logged in\");\n      this.goToDisplay();\n    },\n    error => console.log(error));\n  }\n\n  onSubmit(){\n    console.log(this.costumer);\n    this.Login();\n  }\n\n  checkLogin() {\n    if (this.loginservice.authenticate(this.username, this.password)\n    ) {\n      this.router.navigate([''])\n      this.invalidLogin = false\n    } else\n      this.invalidLogin = true\n  }\n\n  signin(){\n    this.router.navigate(['/signin']);\n  }\n\n}\n","<div class = \"col-md-6 offset-md-3\"> \n    <h3> Log in </h3>\n    <form>\n        <div class = \"form-group\">\n            <label> First Name </label>\n            <input type=\"text\" class = \"form-control\" id = \"first_name\"\n                [(ngModel)] = \"costumer.first_name\" name = \"first_name\">\n        </div>\n        <div class = \"form-group\">\n            <label> Last Name </label>\n            <input type=\"text\" class = \"form-control\" id = \"last_name\"\n                [(ngModel)] = \"costumer.last_name\" name = \"last_name\">\n        </div>\n        <div class = \"form-group\">\n            <label> Email </label>\n            <input type=\"text\" class = \"form-control\" id = \"email\"\n                [(ngModel)] = \"costumer.email\" name = \"email\">\n        </div>\n        <div class = \"form-group\">\n            <label> username </label>\n            <input type=\"text\" class = \"form-control\" id = \"username\"\n                [(ngModel)] = \"costumer.username\" name = \"username\">\n        </div>\n        <div class = \"form-group\">\n            <label> password </label>\n            <input type=\"password\" class = \"form-control\" id = \"password\"\n                [(ngModel)] = \"costumer.password\" name = \"password\">\n        </div>\n    \n        <button (click)=Login() class=\"btn btn-success\" id=\"button1\"> Login </button>\n        <button (click) = signin() class=\"btn btn-dark\" type=\"submit\" id=\"button2\"> Sign in </button>\n    </form>\n    </div>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Costumer} from './costumer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CostumerService {\n\n  //reponse from REST api\n  private baseURL = \"http://localhost:8080/api/v1/costumer\";\n  constructor(private httpClient: HttpClient) { }\n\n  \n  createCostumer(costumer: Costumer): Observable<Object>{\n    return this.httpClient.post(this.baseURL, costumer);\n  }\n\n  getCostumerById(id: number): Observable<Costumer>{\n    return this.httpClient.get<Costumer>(`${this.baseURL}/${id}`);\n  }\n\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n/*\nif (environment.production) {\n  enableProdMode();\n}\n*/\n\nif (!/localhost/.test(document.location.host)) { enableProdMode(); }\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Ticket} from './ticket';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketService {\n\n  //reponse from REST api\n  private baseURL = \"http://localhost:8080/api/v1/tickets\";\n  constructor(private httpClient: HttpClient) { }\n\n  \n  createTicket(ticket : Ticket): Observable<Object>{\n    return this.httpClient.post(this.baseURL, ticket);\n  }\n\n  getTicketById(id : number): Observable<Ticket>{\n    return this.httpClient.get<Ticket>(`${this.baseURL}/${id}`);\n  }\n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}